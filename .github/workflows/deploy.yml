name: Deploy to Cloud Run

on:
  push:
    branches: [ "dev" ]

env:
  PROJECT_ID: backend
  GAR_LOCATION: asia-southeast1
  REGISTRY: backend
  SERVICE: dev-food-service
  CREDENTIALS_JSON: |
    {
      "type": "service_account",
      "project_id": "backend-430218",
      "private_key_id": "dcc13792668dbc6225e5321f0eb58f7ebf97fb76",
      "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCmu7SE5xfei0vX\nI8zyJnBevbNVDwPylHUoO/TjiKr8N2Fat36VzRxrCdPiqvIzQ03BC7tbiEJNJ2oP\nA1I04H7AMoiaS+8lBAqpkWDJKkkDy3u01ysE20TXEtR7cpboIvMjFCw/RWvHIrsd\ni/Cj5EFLUVKRZhfUHvRQ5i1N2UFwn/B3ll//wMEeE+Q9t0T12qup/se5XE3Qzj4U\nhXUkBkZK547DVmXSJj+DQQsQe7yCEGpZFFYkwg9skGPStS/SG0YzigykSBM5AkG1\nZj4/qd08AZ9MZw2WpBCVughceEOTD4AnIJQ8TxuvBgfNzIG7TUTpo8uEI9dSK6It\n7Mnrw1edAgMBAAECggEAGJwpb68nLXNPZRilA4j7mmr9sVcKCiAyOsIUH2boy1mR\nRnFB1J1LIzF205olLb6IF4UXySbk7REdl8xcXJmrm8rZsYyhESGg6+5yuWlDEGBU\niMN0V2nV+2ONdrsvMwxq6YlCDq9nJ87PN56UN7H/6+dmUeJz2fIdCw6D2V3Gnvd/\nDgxHd45CZQESCLKm/3r9D1j7YOj37/5ANU5DQ5ECp7ShlBKrHHWrmj5IUQJKh/8V\n0xf97E0mxPMF5W9+XKfVjfsx7d6QFfQUI37PtIoQTXnCjEh2T/Kw7KKhQxZmOvAR\nFuN7RMT9H83brW7qDqI9yeejf6y9p7J2UrcddquZsQKBgQDrqsgsumVpIArrCTKd\nlDj/L0zqRLSMvdyyOe98nBDNe+6rETcuCoW1CFf+xXmx5zxdtJ+F4YIRBiDWHjXZ\nEwdcJBugBmZqEAsGa5d/3mYe7bInrrG5gOQ/OZ6ZTnbZn1VauuON6hZvz2yO9qVp\nOgW4HHgYSHkmVNpP5p5ez1LLRwKBgQC1Hl563uA26d2Y3OKFzZ/uMMmBTyMXdsfD\nKKTGn6DnMw/uuL/Kc5cnOQ1TKoLY96iHYUtTV6t22KT4yTV0jyL1TcMK4bAsYAHw\nPwmxRU57u7+R/b9sEY8Zm6tHqlTdnpd+nkJCsFuN7g7z79HSqxXkM3ZdDCpbMpiv\n02yeVZwv+wKBgE+dNlrF7ZSCGq4kQVEyzb6HwDg0VbpmObSMFffG0XZZs9teyYFo\nVJs/4lpTZDVRpPcTGgEkmcgeheFP+2kGIKpkGGELSHX0TYUxu9Ca1W0FZ/Y38hp1\nDKa/VHD+LPB//1nTYSSEPGgxbr8tW9wcmeoE1B1//k2QxN/RTRdCevnpAoGAdqwQ\nYde496IilS9dqShC+zGyRmzQ5GXqm9/8nzwmlHZroRIicIduab/DEFQRahJTtWi1\nj0UpTvTCm1RTFy1WTX6HJpEb+udpPb5AHov30bEB46lsjGWw6qmJ/6oGczOftdIC\nPmoJgySRXZosVCnPbTee/XakJh8v1jzktZYIgZMCgYByqwDFvPpPp1z4pMjznH6C\naWtrmj2rvGN9q+vPGCu2+9U7Ke3Cs4Yr+/KHggh8S5Y+vPcbAErjaORmoKQi1lkt\nvi7fRNB/ceNQ3XhOlt4CK+9SfI0YEqStWB/gCNzwLL7h47jRg01mepNsRZCvY2Kf\n7Ov6nReSNIR5dzvCyfc59A==\n-----END PRIVATE KEY-----\n",
      "client_email": "backend-services@backend-430218.iam.gserviceaccount.com",
      "client_id": "101721740090668398400",
      "auth_uri": "https://accounts.google.com/o/oauth2/auth",
      "token_uri": "https://oauth2.googleapis.com/token",
      "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
      "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/backend-services%40backend-430218.iam.gserviceaccount.com",
      "universe_domain": "googleapis.com"
    }

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ env.CREDENTIALS_JSON }}
          token_format: "access_token"

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)
      - name: Debug Output
        id: debug
        run: |
          echo "Access Token: ${{ steps.auth.outputs.access_token }}"
          echo "ID Token: ${{ steps.auth.outputs.id_token }}"
          echo "Project ID: ${{ env.PROJECT_ID }}"
          echo "Service: ${{ env.SERVICE }}"

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}"

      # END - Docker auth and build
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.GAR_LOCATION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
