name: Deploy to Cloud Run

on:
  push:
    branches: [ "dev" ]

env:
  PROJECT_ID: backend
  GAR_LOCATION: asia-southeast1
  REGISTRY: backend
  SERVICE: dev-food-service
  CREDENTIALS_JSON: |
    {
      "type": "service_account",
      "project_id": "backend-430218",
      "private_key_id": "33df79c6ba46e14fa889ac51278df76b987bb388",
      "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCyAXJl2pR9qmdO\nNZPlzOqod1hGO9+foAJjJ3tsznLhiFEsita+K24TLat8eXyNsfI6RM5spoBYKKKv\ngmhnxKN/V7qK0DIsLC0ZBYqFjOCqnbk+y/ZZrSTsQ3TK8+bqZNa9V4H/G3V3z4XQ\nQP1IoJ+qQwfjeZdJdrIYEKy3a12bD3Jglt6cIIwBFReZCdX8xvPKQN/t8i5p5oaK\n49LKH1b/YJ7LyJdPlAE1WEf6y2hz2uYBWvUXM6ItIR1OaBqVxLVQfja7yIAT/bjP\njQhzjXlsQp8YFKGMoiLx1UrsHJQQJwRwq/OA69A/s70LIo0BOtJsCb6OH/tSK4hk\nUfcIfjpLAgMBAAECggEADNYZ38pxZtaA+JzYe3vZeCiTDw2GRMaPJYNVXTVOB4GD\nCQlCDximqW9jrGg+WSF57EXF9QPUwYa8pJds2/7MI4S6CQSWeaT9444IvTS5htQ0\n5ZhjvXfE79y1cWVBQ6nd6m2DDFh4khk+9xOYsEIVAXwv93FvPXb3xNB/BAMUDvhh\nZxSzJk6fqSXoAB1qg+CkHuOQyU/BMiZQEucxmd3eefzrSooB8qhmMidjmqwDjClG\nV28zyYbVMry2c2nGT4kHc2OsxKjorTIMqw82DVbXqMGFBlfYmO58xG+WkiPVmuJc\nnaL6UCqP1Qk/RGKHj9WHHGusBh4/q5ka27ISzMhp0QKBgQDXdI+8Dzk26B2rfQxg\nMIAM9paztpJ+bpH8aQCB7Qc6ko524hWw9YB9hXWLnjPIdApkptMIKQYeTxWLTwSH\nzkuTxtowWwWeW625AGZCLpdWHLMqN/rmL+8wqhUFTGw+WShgbTM66DETQzdGeZB6\nW/lWZms5pMqSdsjRCLpNV8WkBQKBgQDTgMTSAGcr8R86Ya6qRXF6aDYpWh7f3zBz\niE5TTEbJHy0W7u/d+VAHSVArS5qlg9Ui9C1l5zXtFfOr/dwq0C0Gbkdja9RAZpZR\nN+t0OoM/LNQnbAZJ5Ctu7Q3JYEov3cf1KG+7WfR7Wx03+EjyxlkM+r484PoX1E09\npvHFtAOGDwKBgHWwxz8L9c3nVyWwxgzZEWmDXWjHpxgHIBmH5e4S4ur82XNZJk4m\nnMx0FXRxs4mg0XiPpCEF/8CYpIUXYbspViFf8xmM7vHE1I2FCVbHioVQYhICyDvr\nHTYxAhCF4W7hVuvtWpmn8f66rbwCdYhRK08l3RZ8zObamfGNWe8bretdAoGAO2My\n4MygK6R+4kO/aawqGvbcDmxxsubWkfo6FAWc8qhAXuokjC2PHRym2CFYgRUtaa0q\neiyb5cB+NVMI2TSvD9kzTmVeqd6kYpXTFUXAyKJrx837ThA1aeZCMsNI0Xvyw5Hh\nHbg6f9CruaWLxi+Pnadid3Gsh7hjH+aaiKrtOl0CgYEAuUljXosJCgGtrOZ1qHoP\nqeMH/W73VHJcsa2tQtabQHeZuVsb670+KOgzKc8+zTCAyBXVllpSpw1D3Zd1x9HY\nJ7zyXKEihgankZQxtauEV/mxUBpRX7AXScNkOLoxT1tpHco8Akqa1ZEqO3EOGtax\nH/QyGLz9s2693XEx+gkVDfI=\n-----END PRIVATE KEY-----\n",
      "client_email": "backend-services@backend-430218.iam.gserviceaccount.com",
      "client_id": "101721740090668398400",
      "auth_uri": "https://accounts.google.com/o/oauth2/auth",
      "token_uri": "https://oauth2.googleapis.com/token",
      "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
      "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/backend-services%40backend-430218.iam.gserviceaccount.com",
      "universe_domain": "googleapis.com"
    }


jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ env.CREDENTIALS_JSON }}
          token_format: "access_token"

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)
      - name: Debug Output
        id: debug
        run: |
          echo "Access Token: ${{ steps.auth.outputs.access_token }}"
          echo "ID Token: ${{ steps.auth.outputs.id_token }}"
          echo "Project ID: ${{ env.PROJECT_ID }}"
          echo "Service: ${{ env.SERVICE }}"

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}"

      # END - Docker auth and build
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.GAR_LOCATION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
